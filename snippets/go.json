{
	// Place your snippets for go here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }

	"JSON struct attribute with lowerCamelCase": {
		"prefix": ["jscamel"],
		"body": ["$1 ${2|string,int,int32,int64,uint,uint32,uint64,float32,float64,interface{},[]string,[]int,[]uint,bool,struct{}|} `json:\"${1/^([A-Z]{1})(.*)/${1:/downcase}$2/g}\"`"],
		"description": "A json struct attribute."
	},
	"JSON struct attribute with camel_case": {
		"prefix": ["jssnake"],
		"body": ["$1 ${2|string,int,int32,int64,uint,uint32,uint64,float32,float64,interface{},[]string,[]int,[]uint,bool,struct{}|} `json:\"${1/([a-zA-Z][a-z]*)(([A-Z][a-zA-Z]*))?/${1:/downcase}${2:+_}${3:/downcase}/g}\"`"],
		"description": "A json struct attribute."
	},
	"BSON struct attribute with lowerCamelCase": {
		"prefix": ["bscamel"],
		"body": ["$1 ${2|string,int,int32,int64,uint,uint32,uint64,float32,float64,interface{},[]string,[]int,[]uint,bool,struct{}|} `bson:\"${1/^([A-Z]{1})(.*)/${1:/downcase}$2/g}\"`"],
		"description": "A bson struct attribute."
	},
	"BSON struct attribute with camel_case": {
		"prefix": ["bssnake"],
		"body": ["$1 ${2|string,int,int32,int64,uint,uint32,uint64,float32,float64,interface{},[]string,[]int,[]uint,bool,struct{}|} `bson:\"${1/([a-zA-Z][a-z]*)(([A-Z][a-zA-Z]*))?/${1:/downcase}${2:+_}${3:/downcase}/g}\"`"],
		"description": "A bson struct attribute."
	},
	"Generate a public struct with its go doc": {
		"prefix": ["Struct"],
		"body": ["// $1 $2\n$1 struct{\n\t\n}"],
		"description": "Generate a struct."
	},
	"Generate a private struct without go doc": {
		"prefix": ["struct"],
		"body": ["$1 struct{\n\t\n}"],
		"description": "Generate a struct."
	}
}
